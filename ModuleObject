

Функция ОсновнаяРабота(аргСтрукАргументы) Экспорт
	
	ТабЗначРезультат = Новый ТаблицаЗначений;
	
	стрUriКорневогоПакета = "http://web.cbr.ru/";
	
	
	обПроксиЕжедневныеДанные = WSССылки.ДанныеПоЦеннымБумагам.СоздатьWSПрокси(стрUriКорневогоПакета, "SecInfo", "SecInfoSoap");
	
	
	Если аргСтрукАргументы.перКоманда = 1 Тогда
		
		стрНазваниеМетода = "Bliquidity"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода); 	
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);	
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Bliquidity(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("Blikv") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["Blikv"].BL);
			КонецЕсли; 
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 2 Тогда
		
		стрНазваниеМетода = "OBRplacementInfo";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OBRplacementInfo(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].PI);
			КонецЕсли;	
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 3 Тогда
		
		стрНазваниеМетода = "OBRplacmentResultInfo";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);	
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
			
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OBRplacmentResultInfo(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].PRI);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 4 Тогда
		
		стрНазваниеМетода = "OBRVolumeInCirc";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);	
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OBRVolumeInCirc(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда		
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].PIC);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 5 Тогда
		
		стрНазваниеМетода = "Avgprocstav";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);	
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Avgprocstav(обАргументы);
		
				
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда 				
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].AP);	
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 6 Тогда 
		
		стрНазваниеМетода = "VKO";
		стрНазваниеРезультата = стрНазваниеМетода + "Result"; 
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.VKO(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].VK);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 7 Тогда 
		
		стрНазваниеМетода = "Stav1w";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.dt = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Stav1w(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
			ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Item);
			КонецЕсли;
					
		КонецЕсли;  
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 8 Тогда
		
		стрНазваниеМетода = "Thin_adj";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.dt = аргСтрукАргументы.стрДатаНачала;;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Thin_adj(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("F123DATA") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["F123DATA"].F123);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 9 Тогда 
		
		стрНазваниеМетода = "BankPapers";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.BankPapers(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].GR);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 10 Тогда 
		
		стрНазваниеМетода = "REPO";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.REPO(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].RP);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 11 Тогда
		
		стрНазваниеМетода = "IDRepoRUB"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.IDRepoRUB(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("InfoDirectREPORUB") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["InfoDirectREPORUB"].IR);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 12 Тогда
		
		стрНазваниеМетода = "IDRepoUSD"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.IDRepoUSD(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("InfoDirectREPOUSD") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["InfoDirectREPOUSD"].IR);
			КонецЕсли;
					
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 13 Тогда
		
		стрНазваниеМетода = "IBMRepo"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.IBMRepo(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("InfoBeyondMicexRepo") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["InfoBeyondMicexRepo"].IR);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 14 Тогда
		
		стрНазваниеМетода = "UnSecLoans";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.UnSecLoans(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].UL);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 15 Тогда
		
		стрНазваниеМетода = "RepoSession";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RepoSession(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].RS);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 16 Тогда
		
		стрНазваниеМетода = "FixedStav1Day"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.FixedStav1Day(обАргументы); 
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].fs);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 17 Тогда
		
		стрНазваниеМетода = "ItogiDepoAuct"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.ItogiDepoAuct(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Idp);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 18 Тогда
		
		стрНазваниеМетода = "rates_lombard1w"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.rates_lombard1w(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("rates_lombard_1w") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["rates_lombard_1w"].rl);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 19 Тогда
		
		стрНазваниеМетода = "rates_lombard2w"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.rates_lombard2w(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("rates_lombard_2w") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["rates_lombard_2w"].rl);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 20 Тогда
		
		стрНазваниеМетода = "rates_lombard3m"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.rates_lombard3m(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("rates_lombard_3m") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["rates_lombard_3m"].rl);
			КонецЕсли;
					
		КонецЕсли;  
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 21 Тогда
		
		стрНазваниеМетода = "rates_lombard6m"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.rates_lombard6m(обАргументы); 
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("rates_lombard_6m") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["rates_lombard_6m"].rl);
			КонецЕсли;
					
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 22 Тогда
		
		стрНазваниеМетода = "rates_lombard12m"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.rates_lombard12m(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("rates_lombard_12m") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["rates_lombard_12m"].rl);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 23 Тогда
		
		стрНазваниеМетода = "NonMarketCredit"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.NonMarketCredit(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].nc);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 24 Тогда
		
		стрНазваниеМетода = "NonMarketAuctionParam"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.NonMarketAuctionParam(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].nmacp);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 25 Тогда
		
		стрНазваниеМетода = "NonMarketAuctionResults"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.OnDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.NonMarketAuctionResults(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].nmacr);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 26 Тогда
		
		стрНазваниеМетода = "LombardList"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.dt = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.LombardList(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Groups);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 27 Тогда
		
		стрНазваниеМетода = "DirRepoAuctionParam"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.DirRepoAuctionParam(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].DR);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 28 Тогда
		
		стрНазваниеМетода = "Flikvid"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Flikvid(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].FL);
			КонецЕсли;
			
		КонецЕсли; 
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 29 Тогда
		
		стрНазваниеМетода = "MB"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.MB(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("MonBaza") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["MonBaza"].MB);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 30 Тогда
		
		стрНазваниеМетода = "RatesCA_3M"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RatesCA_3M(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("RatesCA3M") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["RatesCA3M"].RM);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 31 Тогда
		
		стрНазваниеМетода = "RatesCA_12M"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
				
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RatesCA_12M(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("RatesCA12M") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["RatesCA12M"].RM);
			КонецЕсли;
			
		КонецЕсли;		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 32 Тогда
		
		стрНазваниеМетода = "RatesCA_18M"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RatesCA_18M(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("RatesCA18M") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["RatesCA18M"].RM);
			КонецЕсли;
			
		КонецЕсли;		
			
	ИначеЕсли аргСтрукАргументы.перКоманда = 33 Тогда
		
		стрНазваниеМетода = "Minrates_CA"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Minrates_CA(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("_x0020_Minrates_CA") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["_x0020_Minrates_CA"].M_CA);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 34 Тогда
		
		стрНазваниеМетода = "DepoMaxProc"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.DepoMaxProc(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("_x0020_DepoMaxProc") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["_x0020_DepoMaxProc"].DMP);
			КонецЕсли;
			
		КонецЕсли;		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 35 Тогда
		
		стрНазваниеМетода = "depfNew"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.depfNew(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("Depf") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["Depf"].DP);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 36 Тогда
		
		стрНазваниеМетода = "creditco"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.dt = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.creditco(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("Item") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["Item"]);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 37 Тогда	
		
		стрНазваниеМетода = "REPOFX"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.REPOFX(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].RP);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 38 Тогда
		
		стрНазваниеМетода = "REPOFX"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.DateFrom = аргСтрукАргументы.стрДатаНачала;
		обАргументы.DateTo = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.REPOFX(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].RP);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 39 Тогда	
			
		стрНазваниеМетода = "zcyc_params"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.FromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.zcyc_params(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].ZCYC);
			КонецЕсли;
			
		КонецЕсли;
		
		
	КонецЕсли;
	
	Возврат ТабЗначРезультат;
	                     
КонецФункции



 
 
 

Функция СоздатьXmlИзXdto(аргXdtoОбъект)
	
	обЗапись = Новый ЗаписьXML;
	обЗапись.УстановитьСтроку();	
	ФабрикаXDTO.ЗаписатьXML(обЗапись, аргXdtoОбъект);
	
	Возврат обЗапись.Закрыть();	
	
КонецФункции



Функция ЗаписатьСписокXdtoВТаблицу(аргXdtoОбъект)
	
	ТабЗначРезультат = Новый ТаблицаЗначений; 
	

	Если Типзнч(аргXdtoОбъект) = Тип("СписокXDTO") Тогда
		
		Если аргXdtoОбъект.Количество() > 0 Тогда 
			
			обКоллекция = аргXdtoОбъект[0].Свойства();
			
			Для Каждого элемент Из обКоллекция Цикл
				ТабЗначРезультат.Колонки.Добавить(элемент.Имя)
			КонецЦикла;
			
			Для Каждого элемент Из аргXdtoОбъект Цикл
				ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), элемент);
			КонецЦикла;
			
		КонецЕсли;	
		
		
	Иначе		
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), аргXdtoОбъект);		
	КонецЕсли;

	
	Возврат ТабЗначРезультат;
	
КонецФункции



Функция СоздатьXdtoИзXml(аргСтрXml, аргОбТип = Неопределено)

	обЧитатель = Новый ЧтениеXML;
	обЧитатель.УстановитьСтроку(аргСтрXml);
	
	Если Не аргОбТип = Неопределено Тогда
		Возврат ФабрикаXDTO.ПрочитатьXML(обЧитатель, аргОбТип);  
	КонецЕсли; 
	
	Возврат ФабрикаXDTO.ПрочитатьXML(обЧитатель);
		
КонецФункции

	
	
	



